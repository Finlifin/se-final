openapi: 3.0.3
info:
  title: FlixBackend 认证与密码管理 API
  description: |
    此 API 文档详细描述了 FlixBackend 应用的密码管理相关接口，包括密码设置、修改和重置功能。
    
    **注意**：所有密码类接口中，客户端发送的密码都应该是经过 SHA256 加密的。服务器会对这些密码再次加密后存入数据库，以提高安全性。
  version: 1.0.0
  contact:
    name: FlixBackend 开发团队
    email: support@flixbackend.com
servers:
  - url: https://api.flixbackend.com/api/v1
    description: 生产环境
  - url: https://test.flixbackend.com/api/v1
    description: 测试环境
  - url: http://localhost:4000/api/v1
    description: 开发环境
tags:
  - name: 密码管理
    description: 用户密码的设置、修改和重置操作

paths:
  /auth/set_password:
    post:
      tags:
        - 密码管理
      summary: 设置初始密码
      description: |
        为通过手机号验证码注册/登录但还没有设置密码的用户提供设置初始密码的功能。
        可以通过两种方式验证身份：
        1. 已登录状态（通过 token）- 需要在请求头中提供 Authorization
        2. 使用手机号+验证码验证身份 - 需要在请求体中提供 phone_number 和 sms_code
      operationId: setInitialPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SetPasswordWithSmsRequest'
                - $ref: '#/components/schemas/SetPasswordRequest'
      responses:
        '200':
          description: 密码设置成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求参数错误或账户已有密码
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 验证码错误或已过期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户账号不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
      security:
        - bearerAuth: []
        - {}  # 空对象表示可以不提供认证

  /auth/update_password:
    post:
      tags:
        - 密码管理
      summary: 修改密码
      description: 已登录用户修改自己的密码，需要提供旧密码以验证身份。
      operationId: updatePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
      responses:
        '200':
          description: 密码修改成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 未登录或旧密码错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
      security:
        - bearerAuth: []

  /auth/reset_password:
    post:
      tags:
        - 密码管理
      summary: 重置密码
      description: 用户忘记密码时，通过手机号和短信验证码验证身份后重置密码。
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        '200':
          description: 密码重置成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: 验证码错误或已过期
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '404':
          description: 用户账号不存在
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: 在请求头中使用 Bearer 认证方式，格式为 "Bearer {token}"
  
  schemas:
    SetPasswordRequest:
      type: object
      required:
        - new_password
      properties:
        new_password:
          type: string
          description: 新密码的SHA256哈希值
          example: "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8"
      
    SetPasswordWithSmsRequest:
      type: object
      required:
        - phone_number
        - sms_code
        - new_password
      properties:
        phone_number:
          type: string
          description: 用户手机号
          pattern: "^1\\d{10}$"
          example: "13800138000"
        sms_code:
          type: string
          description: 短信验证码
          example: "123456"
        new_password:
          type: string
          description: 新密码的SHA256哈希值
          example: "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8"
      
    UpdatePasswordRequest:
      type: object
      required:
        - old_password
        - new_password
      properties:
        old_password:
          type: string
          description: 旧密码的SHA256哈希值
          example: "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8"
        new_password:
          type: string
          description: 新密码的SHA256哈希值
          example: "ef797c8118f02dfb649607dd5d3f8c7623048c9c063d532cc95c5ed7a898a64f"
    
    ResetPasswordRequest:
      type: object
      required:
        - phone_number
        - sms_code
        - new_password
      properties:
        phone_number:
          type: string
          description: 用户手机号
          pattern: "^1\\d{10}$"
          example: "13800138000"
        sms_code:
          type: string
          description: 短信验证码
          example: "123456"
        new_password:
          type: string
          description: 新密码的SHA256哈希值
          example: "5e884898da28047151d0e56f8dc6292773603d0d6aabbdd62a11ef721d1542d8"
    
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 操作是否成功
          example: true
        message:
          type: string
          description: 成功消息
          example: "密码设置成功"

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 操作是否成功
          example: false
        error:
          type: string
          description: 错误消息
          example: "账户已有密码，请使用修改密码接口"

    UnauthorizedResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 操作是否成功
          example: false
        error:
          type: string
          description: 未授权错误消息
          example: "验证码错误或已过期"

    NotFoundResponse:
      type: object
      properties:
        success:
          type: boolean
          description: 操作是否成功
          example: false
        error:
          type: string
          description: 资源不存在错误消息
          example: "账号不存在"